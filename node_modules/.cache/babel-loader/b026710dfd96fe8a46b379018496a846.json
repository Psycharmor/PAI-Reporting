{"ast":null,"code":"var _jsxFileName = \"/Users/delshahab/Github/my-app/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { domain, API, endpoint } from '../config/app.json';\nimport { AUTH_TOKEN } from '../helper';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validate: false,\n      loading: false,\n      username: '',\n      password: '',\n      error: ''\n    };\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      this.setState({\n        loading: true,\n        validate: true,\n        error: ''\n      });\n      axios.post(domain.env.siteUrl + API.WP + API.JWT + endpoint.token, {\n        username,\n        password\n      }).then(user => this.handleLoginSuccess(user.data)).catch(error => this.handleLoginFail(error));\n    };\n\n    this.handleLoginSuccess = user => {\n      localStorage.setItem(AUTH_TOKEN, JSON.stringify(user));\n      console.log('user', user);\n      this.setState({\n        validate: false,\n        loading: false,\n        username: '',\n        password: '',\n        error: ''\n      });\n      this.props.history.push('/profile');\n    };\n\n    this.handleLoginFail = error => {\n      this.setState({\n        validate: true,\n        loading: false,\n        error: 'Invalid username / password'\n      });\n    };\n\n    this.handleUsername = username => {\n      this.setState({\n        username\n      });\n    };\n\n    this.handlePassword = password => {\n      this.setState({\n        password\n      });\n    };\n  }\n\n  renderError() {\n    if (this.state.error) {\n      return React.createElement(Alert, {\n        variant: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.error);\n    } else if (this.state.loading) {\n      return React.createElement(Alert, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n  render() {\n    const validate = this.state.validate;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form, {\n      method: \"POST\",\n      noValidate: true,\n      validated: validate,\n      onSubmit: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"React WordPress JWT Auth\"), React.createElement(Form.Group, {\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      type: \"text\",\n      required: true,\n      placeholder: \"Username / Email\",\n      onChange: event => this.handleUsername(event.target.value),\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Username cannot be empty!\")), React.createElement(Form.Group, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      required: true,\n      placeholder: \"Password\",\n      onChange: event => this.handlePassword(event.target.value),\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Password cannot be empty!\")), this.renderError(), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/delshahab/Github/my-app/src/components/LoginForm.js"],"names":["React","Component","Form","Button","Alert","axios","domain","API","endpoint","AUTH_TOKEN","LoginForm","state","validate","loading","username","password","error","handleLogin","event","preventDefault","setState","post","env","siteUrl","WP","JWT","token","then","user","handleLoginSuccess","data","catch","handleLoginFail","localStorage","setItem","JSON","stringify","console","log","props","history","push","handleUsername","handlePassword","renderError","render","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport axios from \"axios\";\n\nimport { domain, API, endpoint } from '../config/app.json'\nimport { AUTH_TOKEN } from '../helper';\n\nclass LoginForm extends Component {\n  state = {\n    validate: false,\n    loading: false,\n    username: '',\n    password: '',\n    error: '',\n  }\n\n  handleLogin = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    this.setState({ loading: true, validate: true, error: '' });\n    axios.post(domain.env.siteUrl + API.WP + API.JWT + endpoint.token, {\n      username,\n      password\n    })\n    .then(user => this.handleLoginSuccess(user.data))\n    .catch(error => this.handleLoginFail(error))\n  }\n\n  handleLoginSuccess = user => {\n    localStorage.setItem(AUTH_TOKEN, JSON.stringify(user));\n    console.log('user', user)\n    this.setState({\n      validate: false,\n      loading: false,\n      username: '',\n      password: '',\n      error: ''\n    });\n    this.props.history.push('/profile');\n  }\n\n  handleLoginFail = error => {\n    this.setState({ validate: true, loading: false, error: 'Invalid username / password' });\n  }\n\n  handleUsername = username => {\n    this.setState({ username });\n  }\n\n  handlePassword = password => {\n    this.setState({ password });\n  }\n\n  renderError() {\n    if (this.state.error) {\n      return (\n        <Alert variant=\"danger\">\n          {this.state.error}\n        </Alert>\n      )\n    } else if (this.state.loading) {\n      return (\n        <Alert variant=\"primary\">\n          Loading...\n        </Alert>\n      )\n    }\n  }\n\n  render() {\n    const { validate } = this.state;\n    return (\n      <div className=\"container\">\n        <Form \n          method=\"POST\" \n          noValidate\n          validated={validate}\n          onSubmit={this.handleLogin}\n        >\n          <h2>React WordPress JWT Auth</h2>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control \n              type=\"text\" \n              required \n              placeholder=\"Username / Email\"\n              onChange={event => this.handleUsername(event.target.value)}\n              value={this.state.username}\n            />\n            <Form.Control.Feedback type=\"invalid\">Username cannot be empty!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              type=\"password\" \n              required \n              placeholder=\"Password\"\n              onChange={event => this.handlePassword(event.target.value)}\n              value={this.state.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">Password cannot be empty!</Form.Control.Feedback>\n          </Form.Group>\n          {this.renderError()}\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}